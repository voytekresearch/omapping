function[] = head(sFiles)


% Start a new report
bst_report('Start', sFiles);

% Process: Compute head model
sFiles = bst_process('CallProcess', 'process_headmodel', sFiles, [], ...
    'Comment', '', ...
    'sourcespace', 1, ...  % Cortex surface
    'meg', 3, ...  % Overlapping spheres
    'eeg', 3, ...  % OpenMEEG BEM
    'ecog', 2, ...  % OpenMEEG BEM
    'seeg', 2, ...  % OpenMEEG BEM
    'openmeeg', struct(...
         'BemFiles', {{}}, ...
         'BemNames', {{'Scalp', 'Skull', 'Brain'}}, ...
         'BemCond', [1, 0.0125, 1], ...
         'BemSelect', [1, 1, 1], ...
         'isAdjoint', 0, ...
         'isAdaptative', 1, ...
         'isSplit', 0, ...
         'SplitLength', 4000));

% Process: Compute sources
sFiles = bst_process('CallProcess', 'process_inverse', sFiles, [], ...
    'Comment', '', ...
    'method', 1, ...  % Minimum norm estimates (wMNE)
    'wmne', struct(...
         'NoiseCov', [], ...
         'InverseMethod', 'wmne', ...
         'ChannelTypes', {{}}, ...
         'SNR', 3, ...
         'diagnoise', 0, ...
         'SourceOrient', {{'fixed'}}, ...
         'loose', 0.2, ...
         'depth', 1, ...
         'weightexp', 0.5, ...
         'weightlimit', 10, ...
         'regnoise', 1, ...
         'magreg', 0.1, ...
         'gradreg', 0.1, ...
         'eegreg', 0.1, ...
         'ecogreg', 0.1, ...
         'seegreg', 0.1, ...
         'fMRI', [], ...
         'fMRIthresh', [], ...
         'fMRIoff', 0.1, ...
         'pca', 1), ...
    'sensortypes', 'MEG', ...
    'output', 1);  % Kernel only: shared

% Process: Project on default anatomy
sFiles = bst_process('CallProcess', 'process_project_sources', sFiles, []);

% Save and display report
ReportFile = bst_report('Save', sFiles);
bst_report('Open', ReportFile);

end